# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Build

on:
  workflow_call:
    inputs:
      branch:
        description: The branch to build from
        type: string
        default: main
        required: false
      publish:
        description: Specify if the artifacts should be published after build
        type: boolean
        default: false
        required: false
      skip-tests:
        description: Wether to skip tests or not
        type: boolean
        default: false
        required: false
      java-version:
        description: Java Version
        type: string
        default: 11
        required: false
      node-version:
        description: Node.js Version
        type: string
        default: 16
        required: false
    secrets:
      token:
        description: Token
        required: false
      bit-token:
        description: Bit Token
        required: false

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      type: ${{ steps.detect-type.outputs.type  }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}

      - id: detect-type
        name: Detect Type
        run: |
          if test -f "pom.xml"; then
            TYPE=maven
          elif test -f "yarn.lock"; then
            TYPE=yarn
          elif test -f "package-lock.json"; then
            TYPE=npm
          fi

          if [[ $TYPE == "" ]]; then
            echo "::error title=Type Detection::Could not detect the project's type"
            exit 1
          fi

          echo "::set-output name=type::$TYPE"
          echo "::notice title=Project Type::$TYPE"

  build-maven:
    name: Build (Maven)
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.type == 'maven'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java-version }}
          distribution: adopt
          cache: maven

      - name: Build
        run: mvn -B clean install -DskipTests
        if: inputs.skip-tests == true
        env:
          GITHUB_TOKEN: ${{ secrets.token }}

      - name: Build & Test
        run: mvn -B clean install
        if: inputs.skip-tests == false
        env:
          GITHUB_TOKEN: ${{ secrets.token }}

      - name: Publish
        if: inputs.publish == true
        run: mvn -B deploy
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          retention-days: 1
          name: artifacts
          path: |
            target/**/*.jar
            **/target/**/*.jar

      - run: ls -al & tree target
  build-npm:
    name: Build (NPM)
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.type == 'npm'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.branch }}

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.node-version }}
          cache: npm

      - name: Configure Bit
        run: |
          echo "Adding bit.dev to npm registry"
          npm config set @bit:registry https://node.bit.dev
          npm config set @sparqr:registry=https://node.bit.dev
          npm config set @teambit:registry=https://node.bit.dev
          npm config set //node.bit.dev/:_authToken ${{ secrets.bit-token }}

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Pack build
        run: tar -czvf artifacts.tar.gz ./build

      - name: Upload build package
        uses: actions/upload-artifact@v2
        with:
          retention-days: 1
          name: artifacts
          path: ./artifacts.tar.gz

  build-yarn:
    name: Build (Yarn)
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.type == 'yarn'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.branch }}

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.node-version }}
          cache: yarn

      - name: Configure Bit
        run: |
          echo "Adding bit.dev to npm registry"
          npm config set @bit:registry https://node.bit.dev
          npm config set @sparqr:registry=https://node.bit.dev
          npm config set @teambit:registry=https://node.bit.dev
          npm config set //node.bit.dev/:_authToken ${{ secrets.bit-token }}

      - name: Install Dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Pack build
        run: tar -czvf artifacts.tar.gz ./build

      - name: Upload build package
        uses: actions/upload-artifact@v2
        with:
          retention-days: 1
          name: artifacts
          path: artifacts.tar.gz